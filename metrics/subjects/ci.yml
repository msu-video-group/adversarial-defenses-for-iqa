metric:init:
  tags:
    - storage
  extends: .common
  stage: .pre
  script:
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - IMAGE="${CI_REGISTRY_IMAGE}/init:$CI_PIPELINE_ID"
    - cd subjects/_init
    - docker build -t "$IMAGE" .
    - docker push "$IMAGE"

.metric:build:
  tags:
    - storage
  extends: .common
  stage: build
  variables:
    PARAM_DOCKER_BUILD_PATH: .
    PARAM_IQA_PYTORCH: 0
  script:
    - apk add --no-cache bash
    - ./scripts/metric-build.sh
  retry: 2

.metric:test:
  tags:
    - storage
  extends: .common
  stage: test
  image: "$CI_REGISTRY_IMAGE/init:$CI_PIPELINE_ID"
  variables:
    PARAM_COLORSPACE: rgb24
    PARAM_NOREF: 0
  script:
    - ./scripts/metric-test.sh
  artifacts:
    name: ${CI_JOB_NAME%:*}
    paths:
      - "*.log"
  rules:
    - changes:
      - subjects/${CI_JOB_NAME%:*}/**
  retry: 2

.metric-noref:test:
  extends: .metric:test
  variables:
    PARAM_NOREF: 1



paq2piq:build:
  extends: .metric:build
  variables:
    PARAM_IQA_PYTORCH: 1

linearity:build:
  extends: .metric:build
linearity:test:
  extends: .metric-noref:test

koncept:build:
  extends: .metric:build
koncept:test:
  extends: .metric-noref:test

spaq:build:
  extends: .metric:build
spaq:test:
  extends: .metric-noref:test


meta-iqa:build:
  extends: .metric:build
meta-iqa:test:
  extends: .metric-noref:test

maniqa:build:
  extends: .metric:build
maniqa:test:
  extends: .metric-noref:test

  
fpr:build:
  extends: .metric:build
  
